replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: "851725269187.dkr.ecr.ap-southeast-1.amazonaws.com/quypx-poc-uat-be-app"
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "NONE-b776e86"

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  create: false
  automount: true
  annotations:
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: "nginx"
  annotations:
    alb.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
  hosts:
    - host: quypx-be.poc-h2hubgenai.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources: #{}
  limits:
    cpu: 1000m
    memory: 2048Mi
  requests:
    cpu: 100m
    memory: 512Mi

env: #[]
  - name: RAPIDAPI_KEY
    value: "8829f5a5a9msh90a9323ec3e41cdp1d44e0jsndd6defdd77af"

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /healthcheck
    port: 8080
readinessProbe:
  httpGet:
    path: /healthcheck
    port: 8080

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

volumes: []
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}